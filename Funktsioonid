#Простейшие арифметические операции
#Написать функцию arithmetic, принимающую 3 аргумента: первые 2 - числа, третий - операция, которая должна быть произведена над ними. Если третий аргумент +, сложить их; если —, то вычесть; * — умножить; / — разделить (первое на второе). В остальных случаях вернуть строку "Неизвестная операция".
def arithmetic(a, b, too):
    if too == "+":
        return a + b
    elif too == "-":
        return a - b
    elif too == "*":
        return a * b
    elif too == "/":
        return a / b
    else:
        return "неизвестная операция"

#(2)
#Високосный год
#Написать функцию is_year_leap, принимающую 1 аргумент — год, и возвращающую True, если год високосный, и False иначе.

def is_year_leap(year):
    if year % 4 == 0:
        return True
    else:
        return False
        
#(3)
#Квадрат
#Написать функцию square, принимающую 1 аргумент — сторону квадрата, и возвращающую 3 значения: периметр квадрата, площадь квадрата и диагональ квадрата.
def square(a):
    print(f"периметр квадрата {4*a} \nплощадь квадрата {a*a} \nдиагональ квадрата {0.5*2*a**2}")
    return square


#(4)
#Времена года
#Написать функцию season, принимающую 1 аргумент — номер месяца (от 1 до 12), и возвращающую время года, которому этот месяц принадлежит (talv, kevad, suvi или sügis).
def season(kuu):
    if kuu >= 1 or kuu ==12:
        print('Talv')
    elif kuu >2:
        print('Kevad')
    elif kuu > 5:
        print('Suvi')
    elif kuu > 8 and kuu < 12:
        print('Sügis')
    return season

#(5)
#Банковский вклад
#Пользователь делает вклад в размере a евро сроком на years лет под 10% годовых (каждый год размер его вклада увеличивается на 10%. Эти деньги прибавляются к сумме вклада, и на них в следующем году тоже будут проценты).
#Написать функцию bank, принимающая аргументы a и years, и возвращающую сумму, которая будет на счету пользователя.

def bank(many,yers):
    for bank in range(yers):
        procent = many/10
        bank += many+procent
    return bank
(6)
#Простые числа
#Написать функцию is_prime, принимающую 1 аргумент — число от 0 до 1000, и возвращающую True, если оно простое, и False - иначе.
def is_prime(arv):
    b = 2
    while b * b <= arv and arv % b != 0:
        b+= 1
    return b*b >arv
#(7)
#Правильная дата
#Написать функцию date, принимающую 3 аргумента — день, месяц и год. Вернуть True, если такая дата есть в нашем календаре, и False иначе.

def date(day, month, year):
    if day > 0 and month > 0 and month <= 12:
        if month in [1, 3, 5, 7, 8, 10, 12] and day <= 31:
            return True
        elif month in [4, 6, 9, 11] and day <= 30:
            return True
        elif month == 2:
            if is_year_leap(year) and day <= 29:
                return True
            elif not is_year_leap(year) and day <= 28:
                return True
    return False
